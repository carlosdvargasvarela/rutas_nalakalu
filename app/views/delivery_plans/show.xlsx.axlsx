wb = xlsx_package.workbook

# =====================
# Estilos
# =====================
header_style = wb.styles.add_style(
  bg_color: "4472C4",
  fg_color: "FFFFFF",
  b: true,
  alignment: { horizontal: :center }
)

scheduled_style = wb.styles.add_style(
  bg_color: "FFF2CC",
  border: { style: :thin, color: "D6B656" }
)

ready_style = wb.styles.add_style(
  bg_color: "E2EFDA",
  border: { style: :thin, color: "70AD47" }
)

confirmed_style = wb.styles.add_style(
  bg_color: "DEEBF7",
  border: { style: :thin, color: "5B9BD5" }
)

default_style = wb.styles.add_style(
  border: { style: :thin, color: "CCCCCC" }
)

# =====================
# Hoja
# =====================
wb.add_worksheet(name: "Plan de Ruta") do |sheet|
  # =====================
  # Header
  # =====================
  sheet.add_row [
    "Fecha de entrega",
    "Pedido",
    "Producto",
    "Cantidad",
    "Vendedor",
    "Cliente",
    "Dirección",
    "# Parada",
    "Conductor",
    "Camión",
    "Estado",
    "Hora",
    "Contacto",
    "Notas"
  ], style: header_style

  # =====================
  # Filas de datos
  # =====================
  @assignments.each do |assignment|
    delivery = assignment.delivery

    if delivery.active_items_for_plan_for(current_user).empty?
      # Estilo según estado
      row_style = case delivery.status
                  when "scheduled"        then scheduled_style
                  when "ready_to_deliver" then ready_style
                  when "confirmed"        then confirmed_style
                  else default_style
                  end

      sheet.add_row [
        delivery.delivery_date.strftime("%d/%m/%Y"),
        delivery.order.number,
        "Sin productos",
        "",
        delivery.order.seller.seller_code,
        delivery.order.client.name,
        [delivery.delivery_address.address, delivery.delivery_address.description].compact.join(" - "),
        assignment.stop_order,
        @delivery_plan.driver&.name || "Sin asignar",
        @delivery_plan.truck || "Sin asignar",
        delivery.display_status,
        delivery.delivery_time_preference.presence || "Sin preferencia",
        "#{delivery.contact_name}#{delivery.contact_phone.present? ? " - #{delivery.contact_phone}" : ""}",
        ""
      ], style: row_style

    else
      delivery.active_items_for_plan_for(current_user).each do |delivery_item|
        # Estilo según estado
        row_style = case delivery.status
                    when "scheduled"        then scheduled_style
                    when "ready_to_deliver" then ready_style
                    when "confirmed"        then confirmed_style
                    else default_style
                    end

        # Combinar notas
        all_notes = []
        all_notes << "PRODUCCIÓN: #{delivery_item.order_item.notes}" if delivery_item.order_item.notes.present?
        all_notes << "LOGÍSTICA: #{delivery_item.notes}" if delivery_item.notes.present?
        notes_text = all_notes.join("\n")

        sheet.add_row [
          delivery.delivery_date.strftime("%d/%m/%Y"),
          delivery.order.number,
          delivery_item.order_item.product,
          delivery_item.quantity,
          delivery.order.seller.seller_code,
          delivery.order.client.name,
          [delivery.delivery_address.address, delivery.delivery_address.description].compact.join(" - "),
          assignment.stop_order,
          @delivery_plan.driver&.name || "Sin asignar",
          @delivery_plan.truck || "Sin asignar",
          delivery.display_status,
          delivery.delivery_time_preference.presence || "Sin preferencia",
          "#{delivery.contact_name}#{delivery.contact_phone.present? ? " - #{delivery.contact_phone}" : ""}",
          notes_text
        ], style: row_style
      end
    end
  end

  # =====================
  # Ajustes de hoja
  # =====================
  sheet.column_widths 12, 15, 25, 10, 12, 20, 30, 8, 15, 10, 15, 15, 25, 40

  # Combinar celdas de fecha si todas son iguales
  if @assignments.any?
    first_date = @assignments.first.delivery.delivery_date.strftime("%d/%m/%Y")

    if @assignments.all? { |a| a.delivery.delivery_date.strftime("%d/%m/%Y") == first_date }
      total_rows = @assignments.sum { |a| [a.delivery.active_items_for_plan_for(current_user).count, 1].max }
      if total_rows > 1
        sheet.merge_cells("A2:A#{total_rows + 1}")
      end
    end
  end

  # Filtros automáticos
  if @assignments.any?
    total_rows = 1 + @assignments.sum { |a| [a.delivery.active_items_for_plan_for(current_user).count, 1].max }
    sheet.auto_filter = "A1:N#{total_rows}"
  end

  # Congelar primera fila
  sheet.sheet_view.pane do |pane|
    pane.y_split = 1
    pane.state   = :frozen
    pane.top_left_cell = "A2"
  end
end