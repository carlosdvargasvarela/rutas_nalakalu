wb = xlsx_package.workbook

# Definir estilos
header_style = wb.styles.add_style(
  bg_color: "4472C4",
  fg_color: "FFFFFF", 
  b: true,
  alignment: { horizontal: :center }
)

scheduled_style = wb.styles.add_style(
  bg_color: "FFF2CC",  # Amarillo claro para alertar
  border: { style: :thin, color: "D6B656" }
)

ready_style = wb.styles.add_style(
  bg_color: "E2EFDA",  # Verde claro
  border: { style: :thin, color: "70AD47" }
)

confirmed_style = wb.styles.add_style(
  bg_color: "DEEBF7",  # Azul claro
  border: { style: :thin, color: "5B9BD5" }
)

default_style = wb.styles.add_style(
  border: { style: :thin, color: "CCCCCC" }
)

wb.add_worksheet(name: "Plan de Ruta") do |sheet|
  # Headers con estilo - coinciden exactamente con la tabla del show
  sheet.add_row [
    "# Parada",
    "Pedido", 
    "Cliente",
    "Vendedor",
    "Dirección",
    "Hora",
    "Fecha",
    "Estado",
    "Contacto",
    "Producto",
    "Cantidad",
    "Notas",
    "Conductor",
    "Camión"
  ], style: header_style

  # Datos con formato condicional
  @assignments.each do |assignment|
    delivery = assignment.delivery
    
    # Si no hay delivery_items, crear una fila sin productos
    if delivery.delivery_items.empty?
      # Determinar estilo según estado
      row_style = case delivery.status
      when "scheduled"
        scheduled_style
      when "ready_to_deliver"
        ready_style
      when "confirmed"
        confirmed_style
      else
        default_style
      end

      sheet.add_row [
        assignment.stop_order,
        delivery.order.number,
        delivery.order.client.name,
        delivery.order.seller.seller_code,
        [delivery.delivery_address.address, delivery.delivery_address.description].compact.join(" - "),
        delivery.delivery_time_preference.presence || "Sin preferencia",
        delivery.delivery_date.strftime("%d/%m/%Y"),
        delivery.display_status,
        "#{delivery.contact_name}#{delivery.contact_phone.present? ? " - #{delivery.contact_phone}" : ""}",
        "Sin productos",
        "",
        "",
        @delivery_plan.driver&.name || "Sin asignar",
        @delivery_plan.truck || "Sin asignar"
      ], style: row_style
    else
      # Una fila por cada delivery_item
      delivery.delivery_items.each do |delivery_item|
        # Determinar estilo según estado
        row_style = case delivery.status
        when "scheduled"
          scheduled_style
        when "ready_to_deliver"
          ready_style
        when "confirmed"
          confirmed_style
        else
          default_style
        end

        sheet.add_row [
          assignment.stop_order,
          delivery.order.number,
          delivery.order.client.name,
          delivery.order.seller.seller_code,
          [delivery.delivery_address.address, delivery.delivery_address.description].compact.join(" - "),
          delivery.delivery_time_preference.presence || "Sin preferencia",
          delivery.delivery_date.strftime("%d/%m/%Y"),
          delivery.display_status,
          "#{delivery.contact_name}#{delivery.contact_phone.present? ? " - #{delivery.contact_phone}" : ""}",
          delivery_item.order_item.product,
          delivery_item.quantity_delivered,
          delivery_item.order_item.notes.presence || "",
          @delivery_plan.driver&.name || "Sin asignar",
          @delivery_plan.truck || "Sin asignar"
        ], style: row_style
      end
    end
  end

  # Ajustar ancho de columnas para que se vea bien
  sheet.column_widths 8, 15, 20, 12, 35, 15, 12, 15, 25, 25, 10, 30, 15, 12

  # Opcional: Agregar filtros automáticos
  if @assignments.any?
    total_rows = 1 + @assignments.sum { |a| [a.delivery.delivery_items.count, 1].max }
    sheet.auto_filter = "A1:N#{total_rows}"
  end

  # Opcional: Congelar la primera fila (headers)
  sheet.sheet_view.pane do |pane|
    pane.top_left_cell = "A2"
    pane.state = :frozen
    pane.y_split = 1
  end
end